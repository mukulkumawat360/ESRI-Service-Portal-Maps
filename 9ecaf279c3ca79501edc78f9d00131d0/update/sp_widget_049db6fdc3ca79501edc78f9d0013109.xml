<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ESRIMapController($timeout, $rootScope, $scope, $http, $sce) {
    var c = this;
    var apiKey = c.data.apiKey;
    var basemapEnum = "ArcGIS:Navigation";

		

    // This is the center of the map 
    var myTownCenterLat = 26.9124;
    var myTownCenterLong = 75.7873;

   	 // Inital map setup																																							
    var map = L.map("map", {
        minZoom: 10
    }).setView([myTownCenterLat, myTownCenterLong], 14);

	
    // Sets up the vector so we can click on it																					
    L.esri.Vector.vectorBasemapLayer(basemapEnum, {
        apiKey: apiKey
    }).addTo(map);
	
	    // This is the geo coder that can turn the clicks into an address																							
    var geocoder = L.esri.Geocoding.geocodeService({
        apikey: apiKey
    });

    var layerGroup = L.layerGroup().addTo(map);
	
	    // Sets up the search control
    var searchControl = L.esri.Geocoding.geosearch({
        position: "topright",
        placeholder: "Enter an address or place e.g. 1 York St",
        useMapBounds: false,
        providers: [L.esri.Geocoding.arcgisOnlineProvider({
            apikey: apiKey,
            nearby: {
                lat: myTownCenterLat,
                lng: myTownCenterLong
            },
        })]
    }).addTo(map);
	
	    // This executes when you select a search result
    var results = L.layerGroup().addTo(map);
    searchControl.on('results', function(data) {
				
        layerGroup.clearLayers();
			
        for (var i = data.results.length - 1; i >= 0; i--) {
				
            setMark(data.results[i].latlng);
        }
    });

	map.locate({
            setView: true,
            watch: true
        })
        .on('locationfound', function(e) {
            latLong = L.latLng(e.latitude, e.longitude);
            setMark(latLong);
        })
        .on('locationerror', function(e) {
            //console.log(e);
            alert("Location access denied.");
        });

    function setMark(latLong) {
        map.setView([latLong.lat, latLong.lng], 18);
        geocoder.reverse().latlng(latLong).run(function(error, result) {
            if (error) {
                alert("error found");
                return;
            }

            layerGroup.clearLayers();
            results.clearLayers();
            var marker = L.marker([latLong.lat, latLong.lng]).addTo(results).bindPopup("Your location is: " + result.address.LongLabel).openPopup();

           
        });
    }
	
$scope.$watch('selectedName', function(newValue) {
	
	if (newValue) {
		c.data.camp=newValue;
		alert(newValue);
       
        c.server.update().then(function(response) {
				//	alert("inside server update " + JSON.stringify(c.data));
          var latLongs =c.data.latLong;
					//alert("inside latLong value "+c.data.latLong);
            if (latLongs) {
                setMark(c.data.latLong);
            }
        });
    }

        });


    
}]]></client_script>
        <controller_as>c</controller_as>
        <css>#map {
  height: 100%;
  width: 100%;
  min-height: 350px;
  min-width: 300px;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 14px;
  color: #323232;
}

 body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 0;
            background-color: #f9f9f9;
        }

        .dropdown-container {
            margin: 20px 0;
        }

        label {
            font-size: 16px;
            margin-bottom: 5px;
            display: block;
            color: #333;
        }

        select {
            padding: 10px;
            font-size: 16px;
            width: 100%;
            max-width: 300px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background-color: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        select:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 4px rgba(0, 123, 255, 0.5);
        }</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>esri_leaflet</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>ESRI Leaflet</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
    /* populate the 'data' object */
    /* e.g., data.table = $sp.getValue('table'); */
	

    data.apiKey = gs.getProperty('x_snc_esri_service.esri.maps.key');
  data.stateList = [];
	data.cityList = [];
	data.hotelName = [];
    var gr = new GlideRecord("cmn_location");
	  gr.orderBy("state");
    gr.addQuery("country", "India");
    gr.query();
    while (gr.next()) {
        data.stateList.push(gr.getValue("state"));
			data.cityList.push(gr.getValue("city"));
			data.hotelName.push(gr.getValue("name"));
    }
	
    if (input && input.camp) {
	//	gs.addInfoMessage("input data is "+ "camp value is "+ JSON.stringify(input));
			data.latLong={};
        var grd = new GlideRecord("cmn_location");
        grd.addQuery("name", input.camp);
        grd.query();
        while (grd.next()) {
					//gs.addInfoMessage("latlngValue"+JSON.stringify(grd.latitude));
            var dataObj = {};
            dataObj.lat = grd.getValue("latitude");
            dataObj.lng = grd.getValue("longitude"); // Corrected field
           data.latLong=dataObj;
        }
			 
    }
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-10-23 18:44:35</sys_created_on>
        <sys_id>049db6fdc3ca79501edc78f9d0013109</sys_id>
        <sys_mod_count>243</sys_mod_count>
        <sys_name>ESRI Leaflet</sys_name>
        <sys_package display_value="ESRI Service Portal Maps" source="x_snc_esri_service">9ecaf279c3ca79501edc78f9d00131d0</sys_package>
        <sys_policy/>
        <sys_scope display_value="ESRI Service Portal Maps">9ecaf279c3ca79501edc78f9d00131d0</sys_scope>
        <sys_update_name>sp_widget_049db6fdc3ca79501edc78f9d0013109</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-13 07:16:41</sys_updated_on>
        <template><![CDATA[<div id="map"></div>

<div class="dropdown-container">
        <label for="dropdown1">country:</label>
        <select id="dropdown1" >
            <option value="India" >India</option>
 
        </select>

    <label for="dropdown2">State:</label>
    <select id="dropdown2" ng-model="selectedState" ng-options="state for state in data.stateList">
        <option value="">Select a state</option>
    </select>

        <label for="dropdown3">region:</label>
           <select id="dropdown3" ng-model="selectedCity" ng-options="city for city in data.cityList">
        <option value="">Select a state</option>
        </select>

        <label for="dropdown4">camp:</label>
        <select id="dropdown4" ng-model="selectedName" ng-options="name for name in data.hotelName" >
            <option value="--None--">Select an option</option>
        </select>
    </div>


]]></template>
    </sp_widget>
</record_update>
